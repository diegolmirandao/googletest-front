import { ISale } from 'src/interfaces/sale/sale';
import { MCurrency } from '../currency';
import { MCustomer } from '../customer/customer';
import { MDocumentType } from '../documentType';
import { MPaymentTerm } from '../paymentTerm';
import { MPointOfSale } from '../pointOfSale';
import { MUser } from '../user/user';
import { MWarehouse } from '../warehouse';
import { MSaleInstalment } from './instalment';
import { MSalePayment } from './payment';
import { MSaleProduct } from './product';
import { MEstablishment } from '../establishment';

export class MSale {
    public id: number;
    public customerId: number;
    public currencyId: number;
    public pointOfSaleId: number;
    public warehouseId: number;
    public sellerId: number;
    public documentTypeId: number;
    public paymentTermId: number;
    public billedAt: string;
    public expiresAt: string | null;
    public paidAt: string | null;
    public name: string;
    public identificationDocument: string;
    public phone: string | null;
    public email: string | null;
    public address: string | null;
    public comments: string | null;
    public createdAt: string;
    public updatedAt: string;
    public customer: MCustomer;
    public currency: MCurrency;
    public establishment: MEstablishment;
    public pointOfSale: MPointOfSale;
    public warehouse: MWarehouse;
    public seller: MUser;
    public documentType: MDocumentType;
    public paymentTerm: MPaymentTerm;
    public products: MSaleProduct[];
    public payments: MSalePayment[];
    public instalments: MSaleInstalment[];

    constructor(sale: ISale) {
        this.id = sale.id;
        this.customerId = sale.customer_id;
        this.currencyId = sale.currency_id;
        this.pointOfSaleId = sale.point_of_sale_id;
        this.warehouseId = sale.warehouse_id;
        this.sellerId = sale.seller_id;
        this.documentTypeId = sale.document_type_id;
        this.paymentTermId = sale.payment_term_id;
        this.billedAt = sale.billed_at;
        this.expiresAt = sale.expires_at;
        this.paidAt = sale.paid_at;
        this.name = sale.name;
        this.identificationDocument = sale.identification_document;
        this.phone = sale.phone;
        this.email = sale.email;
        this.address = sale.address;
        this.comments = sale.comments;
        this.createdAt = sale.created_at;
        this.updatedAt = sale.updated_at;
        this.customer = new MCustomer(sale.customer);
        this.currency = new MCurrency(sale.currency);
        this.establishment = new MEstablishment(sale.establishment);
        this.pointOfSale = new MPointOfSale(sale.point_of_sale);
        this.warehouse = new MWarehouse(sale.warehouse);
        this.seller = new MUser(sale.seller);
        this.documentType = new MDocumentType(sale.document_type);
        this.paymentTerm = new MPaymentTerm(sale.payment_term);
        this.products = sale.products.map(product => new MSaleProduct(product));
        this.payments = sale.payments.map(payment => new MSalePayment(payment));
        this.instalments = sale.instalments.map(instalment => new MSaleInstalment(instalment));
    }
};