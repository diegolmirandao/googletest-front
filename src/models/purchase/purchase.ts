import { IPurchase } from 'src/interfaces/purchase/purchase';
import { MCurrency } from '../currency';
import { MSupplier } from '../supplier/supplier';
import { MDocumentType } from '../documentType';
import { MPaymentTerm } from '../paymentTerm';
import { MUser } from '../user/user';
import { MWarehouse } from '../warehouse';
import { MPurchaseInstalment } from './instalment';
import { MPurchasePayment } from './payment';
import { MPurchaseProduct } from './product';
import { MEstablishment } from '../establishment';

export class MPurchase {
    public id: number;
    public supplierId: number;
    public currencyId: number;
    public warehouseId: number;
    public documentTypeId: number;
    public paymentTermId: number;
    public amount: number;
    public paidAmount: number;
    public purchasedAt: string;
    public expiresAt: string | null;
    public paidAt: string | null;
    public name: string;
    public identificationDocument: string;
    public phone: string | null;
    public email: string | null;
    public address: string | null;
    public comments: string | null;
    public createdAt: string;
    public updatedAt: string;
    public supplier: MSupplier;
    public currency: MCurrency;
    public establishment: MEstablishment;
    public warehouse: MWarehouse;
    public documentType: MDocumentType;
    public paymentTerm: MPaymentTerm;
    public products: MPurchaseProduct[];
    public payments: MPurchasePayment[];
    public instalments: MPurchaseInstalment[];

    constructor(purchase: IPurchase) {
        this.id = purchase.id;
        this.supplierId = purchase.supplier_id;
        this.currencyId = purchase.currency_id;
        this.warehouseId = purchase.warehouse_id;
        this.documentTypeId = purchase.document_type_id;
        this.paymentTermId = purchase.payment_term_id;
        this.amount = purchase.amount;
        this.paidAmount = purchase.paid_amount;
        this.purchasedAt = purchase.purchased_at;
        this.expiresAt = purchase.expires_at;
        this.paidAt = purchase.paid_at;
        this.name = purchase.name;
        this.identificationDocument = purchase.identification_document;
        this.phone = purchase.phone;
        this.email = purchase.email;
        this.address = purchase.address;
        this.comments = purchase.comments;
        this.createdAt = purchase.created_at;
        this.updatedAt = purchase.updated_at;
        this.supplier = new MSupplier(purchase.supplier);
        this.currency = new MCurrency(purchase.currency);
        this.establishment = new MEstablishment(purchase.establishment);
        this.warehouse = new MWarehouse(purchase.warehouse);
        this.documentType = new MDocumentType(purchase.document_type);
        this.paymentTerm = new MPaymentTerm(purchase.payment_term);
        this.products = purchase.products.map(product => new MPurchaseProduct(product));
        this.payments = purchase.payments.map(payment => new MPurchasePayment(payment));
        this.instalments = purchase.instalments.map(instalment => new MPurchaseInstalment(instalment));
    }
};